@model KetNoiCSDL.EF.Product

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section jsFooter{
    <script>
        $('#SelectImage').on('click', function (e) {
            e.preventDefault();
            var finder = new CKFinder();
            finder.SelectActionFunction = function (url) {
                $('#txtImage').val(url);
            };
            finder.popup();

        });
        var editor = CKEDITOR.replace('txtContent', {
            customConfig: '/Areas/Admin/assets/admin/js1/Plugins/ckeditor/config.js',
        })
    </script>
}

@using (Html.BeginForm("Create", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <section class="content">
      <div class="container-fluid">
        <div class="row">
          <!-- left column -->
          <div class="col-md-12">
            <!-- jquery validation -->
            <div class="card card-primary">
              <div class="card-header">
                <h3 class="card-title">Thêm mới sản phẩm </h3>
              </div>
              <!-- /.card-header -->
              <!-- form start -->
              <form id="quickForm">
                  <div class="card-body">
                      @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                      @Html.HiddenFor(Model => Model.CreatedDate)
                      <div class="form-group">
                          @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                          <div class="col-md-12">
                              @Html.EditorFor(model => model.Name, new { htmlAttributes = new { placeholder = "Nhập tên sản phẩm", @class = "form-control" } })
                              @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                          </div>
                      </div>

                      <div class="form-group">
                          @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                          <div class="col-md-12">
                              @Html.EditorFor(model => model.Code, new { htmlAttributes = new { placeholder = "Nhập mã sản phẩm", @class = "form-control" } })
                              @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                          </div>
                      </div>
                      <div class="form-group col-xs-12">
                          @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
                          <div class="col-md-12">
                              @Html.DropDownListFor(model => model.CategoryID, null, new { htmlAttributes = new { @class = "form-control", aria_describedby = "dropdownMenu1" } })
                              @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                          </div>
                      </div>
                      <div class="form-group">
                          @Html.LabelFor(model => model.MetaTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                          <div class="col-md-12">
                              @Html.EditorFor(model => model.MetaTitle, new { htmlAttributes = new { placeholder = "Tiêu đề sản phẩm", @class = "form-control" } })
                              @Html.ValidationMessageFor(model => model.MetaTitle, "", new { @class = "text-danger" })
                          </div>
                      </div>

                      <div class="form-group">
                          @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                          <div class="col-md-12">
                              @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                              @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                          </div>
                      </div>

                      <div class="form-group">
                          @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                          <div class="col-md-12">
                              <img src="@Url.Content(Model.Image)" style="height:200px; width:200px; margin:10px;" id="previewImage" /> <br>
                              <input type="file" name="imageFile" onchange="ShowImagePreview(this, document.getElementById('previewImage'))" />
                          </div>
                      </div>
                      <div class="form-group">
                          @Html.LabelFor(model => model.Detail, htmlAttributes: new { @class = "control-label col-md-2" })
                          <div class="col-md-12">
                              @Html.TextAreaFor(model => model.Detail, new
                              {
                                  htmlAttributes = new
                              { @class = "form-control" },
                                  @id = "txtContent"
                              })
                              @Html.ValidationMessageFor(model => model.Detail, "", new
                              {
                                  @class = "text-danger"
                              })
                          </div>
                      </div>
                      @*<div class="form-group">
            @Html.LabelFor(model => model.MoreImages, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MoreImages, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MoreImages, "", new { @class = "text-danger" })
            </div>
        </div>*@

                      <div class="form-group">
                          @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                          <div class="col-md-12">
                              @Html.EditorFor(model => model.Price, new { htmlAttributes = new { placeholder = "Giá", @class = "form-control" } })
                              @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                          </div>
                      </div>

                      <div class="form-group">
                          @Html.LabelFor(model => model.PromotionPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                          <div class="col-md-12">
                              @Html.EditorFor(model => model.PromotionPrice, new { htmlAttributes = new { placeholder = "Giá khuyến mãi", @class = "form-control" } })
                              @Html.ValidationMessageFor(model => model.PromotionPrice, "", new { @class = "text-danger" })
                          </div>
                      </div>
                      <div class="form-group">
                          @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                          <div class="col-md-12">
                              @Html.CheckBoxFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                              @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                          </div>
                      </div>
                      




                      <div class="form-group mb-0">
                          <div class="col-md-offset-2 col-md-12">
                              <input type="submit" value="Thêm mới" class="btn btn-outline-primary" />
                              @Html.ActionLink("Quay lại ", "Index", null, new { @class = "btn btn-outline-primary" })

                          </div>
                      </div>


                  </div>
                  
              </form>

                    </div>

                </div>
                <!-- /.card -->
            </div>
            <!--/.col (left) -->
            <!-- right column -->
            <div class="col-md-6">

            </div>
            <!--/.col (right) -->
        </div>
        <!-- /.row -->

    </section>
}